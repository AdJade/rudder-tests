######################
# Setup rudder agent #
######################
setup_agent() {

  [ -z "${SERVER}" ] && SERVER="rudder"

  # Install via package manager only
  if [ -z "${PM}" ]
  then
    echo "Sorry your System is not *yet* supported !"
    exit 4
  fi

  # Install
  ${PM_INSTALL} rudder-agent

  # System specific behavior
  #######

  # TODO rhel5 only
  #${PM_INSTALL} pcre openssl db4-devel

  # TODO rudder < 2.11 only
  echo "${SERVER}" > /var/rudder/cfengine-community/policy_server.dat

  service rudder-agent start

}

upgrade_agent() {

  # Upgrade via package manager only
  if [ -z "${PM}" ]
  then
    echo "Sorry your System is not *yet* supported !"
    exit 4
  fi

  # Upgrade
  ${PM_UPGRADE} rudder-agent

}

setup_relay() {

  # Install relay dependencies
  if [ "${PM}" = "apt" ]
  then
    ${PM_INSTALL} apache2 apache2-utils rsyslog
    a2enmod dav dav_fs
    a2dissite default
  elif [ "${PM}" = "yum" ]
  then
    ${PM_INSTALL} httpd httpd-tools rsyslog
  else
    ${PM_INSTALL} apache2 apache2-utils rsyslog
    a2enmod dav dav_fs
  fi

  mkdir -p /opt/rudder/etc /var/log/rudder/apache2 /var/rudder/share

  for i in /var/rudder/inventories/incoming /var/rudder/inventories/accepted-nodes-updates
  do
    mkdir -p ${i}
    chmod -R 1770 ${i}
    for group in apache www-data www; do
      if getent group ${group} > /dev/null
      then
        chown -R root:${group} ${i}
        break
      fi
    done
  done

  for i in /opt/rudder/etc/htpasswd-webdav-initial /opt/rudder/etc/htpasswd-webdav
  do
    /usr/bin/htpasswd -bc ${i} rudder rudder
  done

  touch /opt/rudder/etc/rudder-networks.conf

  if [ "${PM}" = "apt" ]
  then
    CONFFILE=/etc/apache2/sites-enabled/rudder-default
  elif [ "${PM}" = "yum" ]
  then
    CONFFILE=/etc/httpd/conf.d/rudder-default.conf
  else
    CONFFILE=/etc/apache2/vhosts.d/rudder-default.conf
  fi

cat > "${CONFFILE}" <<EOF
<VirtualHost *:80>
        ServerAdmin webmaster@localhost
        # Expose the server UUID through http
        Alias /uuid /opt/rudder/etc/uuid.hive
        <Directory /opt/rudder/etc>
                Order deny,allow
                Allow from all
        </Directory>
        # WebDAV share to receive inventories
        Alias /inventories /var/rudder/inventories/incoming
        <Directory /var/rudder/inventories/incoming>
                DAV on
                AuthName "WebDAV Storage"
                AuthType Basic
                AuthUserFile /opt/rudder/etc/htpasswd-webdav-initial
                Require valid-user
                Order deny,allow
                # This file is automatically generated according to
                # the hosts allowed by rudder.
                Include /opt/rudder/etc/rudder-networks.conf
                <LimitExcept PUT>
                        Order allow,deny
                        Deny from all
                </LimitExcept>
        </Directory>
        # WebDAV share to receive inventories
        Alias /inventory-updates /var/rudder/inventories/accepted-nodes-updates
        <Directory /var/rudder/inventories/accepted-nodes-updates>
                DAV on
                AuthName "WebDAV Storage"
                AuthType Basic
                AuthUserFile /opt/rudder/etc/htpasswd-webdav
                Require valid-user
                Order deny,allow
                # This file is automatically generated according to
                # the hosts allowed by rudder.
                Include /opt/rudder/etc/rudder-networks.conf
                <LimitExcept PUT>
                        Order allow,deny
                        Deny from all
                </LimitExcept>
        </Directory>
        # Logs
        ErrorLog /var/log/rudder/apache2/error.log
        LogLevel warn
        CustomLog /var/log/rudder/apache2/access.log combined

</VirtualHost>
EOF

  if [ "${PM}" = "apt" ]
  then
    service apache2 restart
  elif [ "${PM}" = "yum" ]
  then
    service httpd restart
  else
    service apache2 restart
  fi

  /var/rudder/cfengine-community/bin/cf-agent -K -D force_inventory

}
