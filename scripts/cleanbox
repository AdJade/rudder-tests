#!/bin/sh

# Various cleanups to apply on the Vagrant boxes we use.
# no set -e since some things are expected to fail

NET="$1"
HOSTS="$2"

# force DNS server to an always valid one (all)
cat << EOF > /etc/resolv.conf
# /etc/resolv.conf, built by rtf (Rudder Test Framwork)
options rotate
nameserver 8.8.8.8
nameserver 8.8.4.4
EOF

chattr +i /etc/resolv.conf

# remove "stdin: not a tty" error on some box
sed -e 's/^mesg n$/tty -s \&\& mesg n/g' /root/.profile > /root/.profile2 && mv /root/.profile2 /root/.profile

# Enable SELinux (all)
if [ -f /etc/sysconfig/selinux ]
then
  setenforce 1 2>/dev/null
  sed -i -e 's/^SELINUX=.*/SELINUX=enabled/' /etc/sysconfig/selinux
fi

# French keyboard on console
if [ -f /etc/sysconfig/keyboard ]
then
  cat > /etc/sysconfig/keyboard <<EOF
KEYTABLE="fr"
MODEL="pc105+inet"
LAYOUT="fr"
KEYBOARDTYPE="pc"
EOF
elif [ -f /etc/default/keyboard ]
then
  cat >/etc/default/keyboard <<EOF
XKBMODEL="pc105"
XKBLAYOUT="fr"
XKBVARIANT="latin9"
XKBOPTIONS=""

BACKSPACE="guess"
EOF
fi
loadkeys fr

# force root password to root
sed -e 's|^root.*|root:$6$5.6rg6Xl$be5jxAm7/HyoL.3xmgwZRv7XkyqChB1vc.v7VgMeX7Di8C3TtKSgt5DmTFE0PsJxTI8d4eAtE5IRFToFsn4vF/:16638:0:99999:7:::|' /etc/shadow > /etc/shadow2 && mv /etc/shadow2 /etc/shadow

# Disable firewall (RHEL)
if [ -f /etc/redhat-release ]
then
  chkconfig iptables off 2>/dev/null
  chkconfig firewalld off 2>/dev/null
  service iptables stop 2>/dev/null
  service firewalld stop 2>/dev/null
fi

# Install a clean /etc/hosts for Rudder to operate properly (all)
cat << EOF > /etc/hosts
# /etc/hosts, built by rtf (Rudder Test Framwork)
#
# Format:
# IP-Address  Full-Qualified-Hostname  Short-Hostname
#

# IPv4
127.0.0.1       localhost

EOF

i=2
for host in ${HOSTS}
do
  echo "${NET}.${i}    ${host}.rudder.local ${host}" >> /etc/hosts
  i=`expr $i + 1`
done

cat << EOF >> /etc/hosts

# IPv6
::1             localhost ipv6-localhost ipv6-loopback

fe00::0         ipv6-localnet

ff00::0         ipv6-mcastprefix
ff02::1         ipv6-allnodes
ff02::2         ipv6-allrouters
ff02::3         ipv6-allhosts
EOF

# Setup Debian / Ubuntu packaging (debian/ubuntu)
if type apt-get 2>/dev/null
then
  export DEBIAN_FRONTEND=noninteractive  

  apt-get update

  # make sure lsb_release command is available
  apt-get install --force-yes -y lsb-release

  # Old Ubuntu releases need to use the old-releases mirror instead of the default one
  if hash lsb_release 2>/dev/null && [ "$(lsb_release -cs)" = "quantal" ]
  then
    echo "deb http://old-releases.ubuntu.com/ubuntu/ quantal main restricted universe" > /etc/apt/sources.list
    echo "deb http://old-releases.ubuntu.com/ubuntu/ quantal-updates main restricted universe" > /etc/apt/sources.list
  fi

  if hash service 2>/dev/null
  then
    :
  else
    apt-get install --force-yes -y sysvconfig
  fi

  apt-get install --force-yes -y apt-transport-https

  # specific to debian7 / rudder server 2.11.6-4
  apt-get install --force-yes -y libltdl7
fi

# Setup SLES packaging (suse)
if [ -f /etc/SuSE-release ]
then

  if [ "$(uname -m)" = "x86_64" ]
  then

    # Install Java, and remove all Zypper repos
    wget -q -O /tmp/jdk-7u71-linux-x64.rpm https://www.normation.com/tarball/java/jdk-7u71-linux-x64.rpm
    rpm -ivh /tmp/jdk-7u71-linux-x64.rpm
    rm /etc/zypp/repos.d/*.repo

    # Get the running SLES version
    SLES_VERSION=`grep "VERSION" /etc/SuSE-release|sed "s%VERSION\ *=\ *\(.*\)%\1%"`
    SLES_SERVICEPACK=`grep "PATCHLEVEL" /etc/SuSE-release|sed "s%PATCHLEVEL\ *=\ *\(.*\)%\1%"`

    # Add the repositories corresponding to the running SLES version
    if [ ${SLES_VERSION} -eq 11 ] && [ ${SLES_SERVICEPACK} -eq 1 ]
    then
      zypper ar -f "https://ci.normation.com/sles-repo/SLES-11-SP1-DVD-x86_64-GM-DVD1/" "SLES_11_SP1_DVD1" > /dev/null
      zypper ar -f "https://ci.normation.com/sles-repo/SLES-11-SP1-64-SDK-DVD1/"        "SLES_11_SP1_DVD2" > /dev/null
    fi

    if [ ${SLES_VERSION} -eq 11 ] && [ ${SLES_SERVICEPACK} -eq 3 ]
    then
      zypper ar -f "https://ci.normation.com/sles-repo/SLES-11-SP3-DVD-x86_64-GM-DVD1/" "SLES_11_SP3_DVD1" > /dev/null
      zypper ar -f "https://ci.normation.com/sles-repo/SLES-11-SP3-DVD-x86_64-GM-DVD2/" "SLES_11_SP3_DVD2" > /dev/null
    fi

  else
    rpm -ivh http://www.normation.com/tarball/java/jdk-7u71-linux-i586.rpm
  fi

fi


# add common usefull packages
if type apt-get 2> /dev/null
then
  export DEBIAN_FRONTEND=noninteractive
  PM_INSTALL="apt-get -y install"
elif type yum 2> /dev/null
then
  # Fix Centos5 issue installing, which install both architecture, this has no effects on other distros
  echo "multilib_policy=best" >> /etc/yum.conf
  PM_INSTALL="yum -y install"
elif type zypper 2> /dev/null
then
  PM_INSTALL="zypper --non-interactive install"
elif [ -x /opt/csw/bin/pkgutil ] 2> /dev/null
then
  PM_INSTALL="/opt/csw/bin/pkgutil --install --parse --yes"
else
  PM_INSTALL="echo TODO install "
fi
# this can be very long, we should make it optional

# package that should exist everywhere
${PM_INSTALL} zsh vim less curl tree nano git binutils rsync
# install that may fail
${PM_INSTALL} htop

# add common useful files
for user in root vagrant
do
  home=`getent passwd ${user} | cut -d: -f6`
  rsync -a /vagrant/scripts/files/vim/ "${home}"/
  rsync -a /vagrant/scripts/files/git/ "${home}"/
  rsync -a /vagrant/scripts/files/bash/ "${home}"/
  rsync -a /vagrant/scripts/files/zsh/ "${home}"/
done

id > /tmp/xxx

